'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _fs = require('./utils/fs');

var _fs2 = _interopRequireDefault(_fs);

var _paths = require('./paths');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getContents = function getContents(watchPath) {
  try {
    if (_fs2.default.existsSync(watchPath)) {
      if (_fs2.default.lstatSync(watchPath).isDirectory()) {
        if (watchPath.startsWith(_paths.cacheDir)) {
          return '';
        }
        return _fs2.default.readdirSync(watchPath).map(function (p) {
          return getContents(_path2.default.join(watchPath, p));
        }).join('');
      } else {
        return _fs2.default.readFileSync(watchPath, 'utf-8');
      }
    }
    return '';
  } catch (e) {
    //Failed to read file, fallback to string
    return '';
  }
};

var createHash = function createHash(settings) {
  var hash = _crypto2.default.createHash('md5');
  var settingsJSON = JSON.stringify(settings);

  hash.update(settingsJSON);

  // if (Array.isArray(settings.watch)) {
  //   hash.update(settings.watch.map(getContents).join(''));
  // }

  return [settings.env, settings.id, hash.digest('hex')].join('_');
};

exports.default = createHash;